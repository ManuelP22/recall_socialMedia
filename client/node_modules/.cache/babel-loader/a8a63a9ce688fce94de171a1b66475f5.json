{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manue\\\\Documents\\\\Development\\\\recall_socialmedia\\\\client\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\";\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { commentPost } from '../../actions/posts';\n\nconst CommentSection = ({\n  post\n}) => {\n  var _user$result2;\n\n  const classes = useStyles();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState('');\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const finalComment = `${user.result.name} : ${comment}`;\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment('');\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Comentarios\"), comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, c)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name) && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Escribe un Comentario\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Comentar\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Comentar\"))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["C:/Users/manue/Documents/Development/recall_socialmedia/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","classes","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","dispatch","commentsRef","handleComment","finalComment","result","name","newComments","_id","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","width","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\r\nimport { Typography, TextField, Button} from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport useStyles from './styles'\r\nimport { commentPost } from '../../actions/posts';\r\n\r\nconst CommentSection = ({ post }) => {\r\n    const classes = useStyles();\r\n    const [comments, setComments] = useState( post?.comments );\r\n    const [comment, setComment] = useState('');\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const dispatch = useDispatch();\r\n    const commentsRef = useRef();\r\n\r\n    const handleComment = async () => {\r\n        const finalComment = `${user.result.name} : ${comment}`\r\n        \r\n        const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\r\n\r\n        setComment('');\r\n        setComments(newComments);\r\n\r\n        commentsRef.current.scrollIntoView({ behavior: 'smooth'})\r\n    };\r\n\r\n    return (\r\n    <div>\r\n        <div className={classes.commentsOuterContainer}>\r\n            <div className={classes.commentsInnerContainer}>\r\n                <Typography gutterBottom variant=\"h6\">Comentarios</Typography>\r\n                {comments.map((c, i) => (\r\n                    <Typography key={i} gutterBottom variant=\"subtitle1\">\r\n                        {c}\r\n                    </Typography>\r\n                ))}\r\n                <div ref={commentsRef} />\r\n            </div>\r\n            {user?.result?.name && (\r\n            <div style={{ width: \"70%\"}}>\r\n                <Typography gutterBottom variant=\"h6\">Escribe un Comentario</Typography>\r\n                <TextField \r\n                    fullWidth\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    label=\"Comentar\"\r\n                    multiline\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                />\r\n                <Button style={{ marginTop: \"10px\" }} fullWidth disabled={!comment.length} variant=\"contained\" color=\"primary\" onClick={handleComment}>\r\n                    Comentar\r\n                </Button>\r\n            </div>\r\n            )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSection"]},"metadata":{},"sourceType":"module"}